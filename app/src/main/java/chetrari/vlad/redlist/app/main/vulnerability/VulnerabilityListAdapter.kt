package chetrari.vlad.redlist.app.main.vulnerability

import android.content.res.ColorStateList
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.core.content.res.ResourcesCompat
import androidx.recyclerview.widget.RecyclerView
import chetrari.vlad.redlist.R
import chetrari.vlad.redlist.data.persistence.type.Vulnerability
import kotlinx.android.extensions.LayoutContainer
import kotlinx.android.synthetic.main.list_item_vulnerability.*

class VulnerabilityListAdapter(
    private val onVulnerabilitySelected: (Vulnerability) -> Unit
) : RecyclerView.Adapter<VulnerabilityListAdapter.ViewHolder>() {

    val data = Vulnerability.values().toList().filter { it != Vulnerability.NE }

    override fun getItemCount() = data.size

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int) = ViewHolder(
        LayoutInflater.from(parent.context).inflate(R.layout.list_item_vulnerability, parent, false),
        onVulnerabilitySelected
    )

    override fun onBindViewHolder(holder: ViewHolder, position: Int) = holder.bind(data[position])

    class ViewHolder(
        override val containerView: View,
        val onVulnerabilitySelected: (Vulnerability) -> Unit
    ) : RecyclerView.ViewHolder(containerView), LayoutContainer {

        fun bind(vulnerability: Vulnerability) {
            val color = ResourcesCompat.getColor(containerView.resources, vulnerability.colorResId, null)
            icon.backgroundTintList = ColorStateList.valueOf(color)
            icon.text = "$vulnerability"
            title.setText(vulnerability.stringResId)
            containerView.setOnClickListener { onVulnerabilitySelected(vulnerability) }
        }
    }
}
